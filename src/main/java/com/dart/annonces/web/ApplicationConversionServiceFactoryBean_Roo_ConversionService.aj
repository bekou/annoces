// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dart.annonces.web;

import com.dart.annonces.domain.Annonces;
import com.dart.annonces.domain.Users;
import com.dart.annonces.service.AnnoncesService;
import com.dart.annonces.service.UsersService;
import com.dart.annonces.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AnnoncesService ApplicationConversionServiceFactoryBean.annoncesService;
    
    @Autowired
    UsersService ApplicationConversionServiceFactoryBean.usersService;
    
    public Converter<Annonces, String> ApplicationConversionServiceFactoryBean.getAnnoncesToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.dart.annonces.domain.Annonces, java.lang.String>() {
            public String convert(Annonces annonces) {
                return new StringBuilder().append(annonces.getSujet()).append(' ').append(annonces.getDateCreation()).append(' ').append(annonces.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Annonces> ApplicationConversionServiceFactoryBean.getIdToAnnoncesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.dart.annonces.domain.Annonces>() {
            public com.dart.annonces.domain.Annonces convert(java.lang.Long id) {
                return annoncesService.findAnnonces(id);
            }
        };
    }
    
    public Converter<String, Annonces> ApplicationConversionServiceFactoryBean.getStringToAnnoncesConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.dart.annonces.domain.Annonces>() {
            public com.dart.annonces.domain.Annonces convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Annonces.class);
            }
        };
    }
    
    public Converter<Users, String> ApplicationConversionServiceFactoryBean.getUsersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.dart.annonces.domain.Users, java.lang.String>() {
            public String convert(Users users) {
                return new StringBuilder().append(users.getName()).append(' ').append(users.getPrenom()).append(' ').append(users.getPseudo()).append(' ').append(users.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, Users> ApplicationConversionServiceFactoryBean.getIdToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.dart.annonces.domain.Users>() {
            public com.dart.annonces.domain.Users convert(java.lang.Long id) {
                return usersService.findUsers(id);
            }
        };
    }
    
    public Converter<String, Users> ApplicationConversionServiceFactoryBean.getStringToUsersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.dart.annonces.domain.Users>() {
            public com.dart.annonces.domain.Users convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Users.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAnnoncesToStringConverter());
        registry.addConverter(getIdToAnnoncesConverter());
        registry.addConverter(getStringToAnnoncesConverter());
        registry.addConverter(getUsersToStringConverter());
        registry.addConverter(getIdToUsersConverter());
        registry.addConverter(getStringToUsersConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
